{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/hashed/lib/main.js","node_modules/hashed/lib/store.js","node_modules/hashed/lib/schema.js","node_modules/hashed/lib/util.js","node_modules/ol/src/source/Vector.js","node_modules/isa.js/IsA.js","node_modules/hashed/lib/serializers.js","node_modules/hashed/lib/deserializers.js","node_modules/hashed/lib/field.js","node_modules/hashed/lib/hash.js","node_modules/ol-hashed/index.js","main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss =\n        /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n          geometry\n        ).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n","const Schema = require('./schema').Schema;\nconst util = require('./util');\nconst serializers = require('./serializers');\n\n/**\n * An object backed store of string values.  Allows registering multiple state\n * providers.\n * @param {Object} values Initial serialized values.\n * @param {function(Object)} callback Called with an object of serialized\n *     values and defaults whenever a provider updates state.\n * @constructor\n */\nconst Store = (exports.Store = function(values, callback) {\n  this._values = values;\n  this._defaults = {};\n  this._providers = [];\n  this._callback = callback;\n  this._callbackTimer = null;\n});\n\nStore.prototype._scheduleCallback = function() {\n  if (this._callbackTimer) {\n    clearTimeout(this._callbackTimer);\n  }\n  this._callbackTimer = setTimeout(this._debouncedCallback.bind(this));\n};\n\nStore.prototype._debouncedCallback = function() {\n  this._callbackTimer = null;\n  this._callback(this._values, this._defaults);\n};\n\nStore.prototype.update = function(values) {\n  if (this._updateTimer) {\n    clearTimeout(this._updateTimer);\n  }\n  this._updateTimer = setTimeout(this._debouncedUpdate.bind(this, values));\n};\n\nStore.prototype._debouncedUpdate = function(newValues) {\n  this._updateTimer = null;\n  const values = this._values;\n  const providers = this._providers.slice(); // callbacks may unregister providers\n  for (let i = providers.length - 1; i >= 0; --i) {\n    const provider = providers[i];\n    const schema = provider.schema;\n    let changed = false;\n    const state = {};\n    schema.forEachKey(function(key, prefixed) {\n      let deserialized;\n      if (!(prefixed in newValues)) {\n        deserialized = schema.getDefault(key);\n        const serializedDefault = schema.serialize(key, deserialized);\n        if (values[prefixed] !== serializedDefault) {\n          changed = true;\n          values[prefixed] = serializedDefault;\n          state[key] = deserialized;\n        }\n      } else if (values[prefixed] !== newValues[prefixed]) {\n        try {\n          deserialized = schema.deserialize(key, newValues[prefixed]);\n          values[prefixed] = newValues[prefixed];\n          state[key] = deserialized;\n          changed = true;\n        } catch (err) {\n          // invalid value, pass\n        }\n      }\n    });\n    if (changed && this._providers.indexOf(provider) >= 0) {\n      provider.callback(state);\n    }\n  }\n};\n\n/**\n * Unregister a provider.  Deletes the provider's values from the underlying\n * store and calls the store's callback.\n * @param {Function} callback The provider's callback.\n */\nStore.prototype.unregister = function(callback) {\n  let removedProvider;\n  this._providers = this._providers.filter(function(provider) {\n    const remove = provider.callback === callback;\n    if (remove) {\n      removedProvider = provider;\n    }\n    return !remove;\n  });\n  if (!removedProvider) {\n    throw new Error('Unable to unregister hashed state provider');\n  }\n  const values = this._values;\n  const defaults = this._defaults;\n  removedProvider.schema.forEachKey(function(key, prefixed) {\n    delete values[prefixed];\n    delete defaults[prefixed];\n  });\n  this._scheduleCallback();\n};\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called by the store on state changes.\n * @return {function(Object)} Called by the provider on state changes.\n */\nStore.prototype.register = function(config, callback) {\n  const provider = {\n    schema: new Schema(config),\n    callback: callback\n  };\n\n  // ensure there are no conflicts with existing providers\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const conflicts = provider.schema.conflicts(this._providers[i].schema);\n    if (conflicts) {\n      throw new Error(\n        'Provider already registered using the same name: ' + conflicts\n      );\n    }\n    if (provider.callback === this._providers[i].callback) {\n      throw new Error('Provider already registered with the same callback');\n    }\n  }\n\n  this._providers.push(provider);\n  this._initializeProvider(provider);\n\n  return function update(state) {\n    if (this._providers.indexOf(provider) === -1) {\n      throw new Error('Unregistered provider attempting to update state');\n    }\n    const schema = provider.schema;\n    let changed = false;\n    const values = this._values;\n    schema.forEachKey(function(key, prefixed) {\n      if (key in state) {\n        const serializedValue = schema.serialize(key, state[key], state);\n        if (values[prefixed] !== serializedValue) {\n          changed = true;\n          values[prefixed] = serializedValue;\n        }\n      }\n    });\n    if (changed) {\n      this._scheduleCallback();\n    }\n  }.bind(this);\n};\n\n/**\n * Call provider with initial values.\n * @param {Object} provider Provider to be initialized.\n */\nStore.prototype._initializeProvider = function(provider) {\n  const state = {};\n  const defaults = {};\n  const values = this._values;\n  provider.schema.forEachKey(function(key, prefixed) {\n    let deserializedValue;\n    const deserializedDefault = provider.schema.getDefault(key);\n    const serializedDefault = provider.schema.serialize(\n      key,\n      deserializedDefault\n    );\n    if (prefixed in values) {\n      try {\n        deserializedValue = provider.schema.deserialize(key, values[prefixed]);\n      } catch (err) {\n        deserializedValue = deserializedDefault;\n      }\n    } else {\n      deserializedValue = deserializedDefault;\n    }\n    state[key] = deserializedValue;\n    defaults[prefixed] = serializedDefault;\n    values[prefixed] = provider.schema.serialize(key, deserializedValue);\n  });\n  for (const prefixed in defaults) {\n    this._defaults[prefixed] = defaults[prefixed];\n  }\n  provider.callback(state);\n};\n\n/**\n * Serialize values with provider serializers where available.\n * @param {Object} values Values to be serialized.\n * @return {Object} The serialized values.\n */\nStore.prototype.serialize = function(values) {\n  const serialized = {};\n  for (let i = 0, ii = this._providers.length; i < ii; ++i) {\n    const provider = this._providers[i];\n    provider.schema.forEachKey(function(key, prefixed) {\n      if (prefixed in values) {\n        serialized[prefixed] = provider.schema.serialize(\n          key,\n          values[prefixed],\n          values\n        );\n      }\n    });\n  }\n  for (const key in values) {\n    if (!(key in serialized)) {\n      const value = values[key];\n      const type = util.typeOf(value);\n      const serializer = serializers.get(type);\n      serialized[key] = serializer(value);\n    }\n  }\n  return serialized;\n};\n","const Field = require('./field').Field;\nconst util = require('./util');\n\n/**\n * Create a new schema.  A schema is a collection of field definitions.\n * @param {Object} config Keys are field names, values are field configs.\n * @constructor\n */\nconst Schema = (exports.Schema = function(config) {\n  config = util.extend({}, config);\n  const fields = {};\n  let prefix;\n  if ('_' in config) {\n    prefix = config._;\n    delete config._;\n  }\n  for (const key in config) {\n    fields[key] = new Field(config[key]);\n  }\n  this._prefix = prefix;\n  this._fields = fields;\n});\n\n/**\n * Get the prefixed version of a key.\n * @param {string} key The key.\n * @return {string} The prefixed key.\n */\nSchema.prototype.getPrefixed = function(key) {\n  return this._prefix ? this._prefix + '.' + key : key;\n};\n\n/**\n * Call a callback for each field key.\n * @param {function(string, number)} callback Called with a local field key and\n *     a prefixed key.\n * @param {Object} thisArg This argument for the callback.\n */\nSchema.prototype.forEachKey = function(callback, thisArg) {\n  let more;\n  for (const key in this._fields) {\n    more = callback.call(thisArg, key, this.getPrefixed(key));\n    if (more === false) {\n      return;\n    }\n  }\n};\n\n/**\n * Serialize a value.\n * @param {string} key The key or field name.\n * @param {*} value The value to serialize.\n * @param {Object} values Additional values for providers to use when serializing.\n * @return {string} The serialized value.\n */\nSchema.prototype.serialize = function(key, value, values) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].serialize(value, values);\n};\n\n/**\n * Deserialize a value.\n * @param {string} key The key or field name.\n * @param {string} str The serialized value.\n * @return {*} The deserialized value.\n */\nSchema.prototype.deserialize = function(key, str) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].deserialize(str);\n};\n\n/**\n * Get the default value for a particular field.\n * @param {string} key The key or field name.\n * @return {*} The default value.\n */\nSchema.prototype.getDefault = function(key) {\n  if (!(key in this._fields)) {\n    throw new Error('Unknown key: ' + key);\n  }\n  return this._fields[key].default;\n};\n\n/**\n * Determine if one schema conflicts with another.  Two schemas conflict if\n * any of their prefixed keys are the same.\n * @param {Schema} other The other schema.\n * @return {boolean|string} This schema conflicts with the other.  If the two\n *     schemas conflict, the return will be the first conflicting key (with\n *     any prefix).\n */\nSchema.prototype.conflicts = function(other) {\n  const thisPrefixedKeys = {};\n  for (const key in this._fields) {\n    thisPrefixedKeys[this.getPrefixed(key)] = true;\n  }\n\n  let conflicts = false;\n  other.forEachKey(function(_, prefixed) {\n    if (prefixed in thisPrefixedKeys) {\n      conflicts = prefixed;\n    }\n    return !conflicts;\n  });\n  return conflicts;\n};\n","const isa = require('isa.js');\n\n/**\n * Get the type of a value.\n * @param {*} value The value.\n * @return {string} The type.\n */\nexports.typeOf = function typeOf(value) {\n  let type = typeof value;\n  if (type === 'object') {\n    if (value === null) {\n      type = 'null';\n    } else if (isa.isArray(value)) {\n      type = 'array';\n    } else if (isa.isDate(value)) {\n      type = 'date';\n    } else if (isa.isRegExp(value)) {\n      type = 'regexp';\n    } else if (isa.isError(value)) {\n      type = 'error';\n    }\n  }\n  return type;\n};\n\n/**\n * Copy properties from one object to another.\n * @param {Object} dest The destination object.\n * @param {Object} source The source object.\n * @return {Object} The destination object.\n */\nexports.extend = function(dest, source) {\n  for (const key in source) {\n    dest[key] = source[key];\n  }\n  return dest;\n};\n\n/**\n * Generate an array of alternating name, value from an object's properties.\n * @param {Object} object The object to zip.\n * @return {Array} The array of name, value [, name, value]*.\n */\nexports.zip = function(object) {\n  const zipped = [];\n  let count = 0;\n  for (const key in object) {\n    zipped[2 * count] = key;\n    zipped[2 * count + 1] = object[key];\n    ++count;\n  }\n  return zipped;\n};\n\n/**\n * Generate an object from an array of alternating name, value items.\n * @param {Array} array The array of name, value [, name, value]*.\n * @return {Object} The zipped up object.\n */\nexports.unzip = function(array) {\n  const object = {};\n  for (let i = 0, ii = array.length; i < ii; i += 2) {\n    object[array[i]] = array[i + 1];\n  }\n  return object;\n};\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","var boolTag = '[object Boolean]',\n\tdateTag = '[object Date]',\n\terrorTag = '[object Error]',\n\tfuncTag = '[object Function]',\n\tafuncTag = '[object AsyncFunction]',\n\tnumberTag = '[object Number]',\n\tobjectTag = '[object Object]',\n\tregexpTag = '[object RegExp]',\n\tstringTag = '[object String]'\n\nvar objectProto = Object.prototype\n\nvar objToString = objectProto.toString\nvar fnToString = Function.prototype.toString\nvar objCtorString = fnToString.call(Object)\n\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg\nvar ARGUMENT_NAMES = /([^\\s,]+)/g\n\nvar NAME_PATTERN = /([\\\\.A-Za-z]+)/g\n\nlet Services = {\n\tgetPrototypeOf: Object.getPrototypeOf,\n\tisHostObject: function (value) {\n\t\tvar result = false\n\t\tif (value !== null && typeof value.toString !== 'function') {\n\t\t\ttry {\n\t\t\t\tresult = !!(value + '')\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn result\n\t},\n\tisDefined (value) {\n\t\treturn value !== undefined && value !== null\n\t},\n\tisIterable (obj) {\n\t\tif ( !Services.isDefined(obj) )\n\t\t\treturn false\n\n\t\treturn typeof obj[Symbol.iterator] === 'function'\n\t},\n\tisPromise (p) {\n\t\treturn p && Object.prototype.toString.call(p) === '[object Promise]'\n\t},\n\tisPlainObject: function (value) {\n\t\tif (!this.isObjectLike(value) || objToString.call(value) !== objectTag || this.isHostObject(value)) {\n\t\t\treturn false\n\t\t}\n\t\tvar proto = typeof value.constructor === 'function' ? this.getPrototypeOf(value) : objectProto\n\n\t\tif (proto === null) {\n\t\t\treturn true\n\t\t}\n\t\tvar Ctor = proto.constructor\n\t\treturn (typeof Ctor === 'function' && Ctor instanceof Ctor && fnToString.call(Ctor) === objCtorString)\n\t},\n\tisObjectLike: function (value) {\n\t\treturn !!value && typeof value === 'object'\n\t},\n\tisArray: Array.isArray,\n\tisObject: function (value) {\n\t\tvar type = typeof value\n\t\treturn !!value && (type === 'object' || type === 'function')\n\t},\n\tisError: function (value) {\n\t\treturn this.isObjectLike(value) && typeof value.message === 'string' && objToString.call(value) === errorTag\n\t},\n\tisNumber: function (value) {\n\t\treturn typeof value === 'number' || (this.isObjectLike(value) && objToString.call(value) === numberTag)\n\t},\n\tisDate: function (value) {\n\t\treturn this.isObjectLike(value) && objToString.call(value) === dateTag\n\t},\n\tisFunction: function (value) {\n\t\treturn this.isObject(value) && (objToString.call(value) === funcTag || objToString.call(value) === afuncTag)\n\t},\n\tisSyncFunction: function (value) {\n\t\treturn this.isObject(value) && objToString.call(value) === funcTag\n\t},\n\tisAsyncFunction: function (value) {\n\t\treturn this.isObject(value) && objToString.call(value) === afuncTag\n\t},\n\tisBoolean: function (value) {\n\t\treturn value === true || value === false || (this.isObjectLike(value) && objToString.call(value) === boolTag)\n\t},\n\tisString: function (value) {\n\t\treturn typeof value === 'string' || ( this.isObjectLike(value) && objToString.call(value) === stringTag)\n\t},\n\tisRegExp: function (value) {\n\t\treturn this.isObject(value) && objToString.call(value) === regexpTag\n\t},\n\twalk: function (object, path, defaultValue) {\n\t\tif ( !path ) return defaultValue\n\n\t\tlet oPath = Array.isArray(path) ? path : path.split('.')\n\n\t\tif ( !object && oPath.length === 0 ) return true\n\t\tfor ( let key of oPath ) {\n\t\t\tif ( !object || !object[key] ) return defaultValue\n\t\t\tobject = object[ key ]\n\t\t}\n\t\treturn object || defaultValue\n\t},\n\tisValidPath: function (object, path) {\n\t\treturn !!Services.walk(object, path, null)\n\t},\n\tparameterNames: function ( func ) {\n\t\tvar fnStr = func.toString().replace(STRIP_COMMENTS, '')\n\t\tvar result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES)\n\t\tif (result === null)\n\t\t\tresult = []\n\t\tresult = result.map( ( p ) => {\n\t\t\tvar index = p.indexOf('=')\n\t\t\treturn (index === -1) ? p : p.substring( 0, index )\n\t\t} )\n\t\tresult = result.filter( ( p ) => {\n\t\t\treturn p.length > 0 && p.match( NAME_PATTERN )\n\t\t} )\n\t\treturn result\n\t},\n\tpick: function (object, predicate, ignore, target ) {\n\t\tif (!object)\n\t\t\treturn {}\n\n\t\tif (!predicate)\n\t\t\tpredicate = Object.keys( object )\n\t\telse if (!Array.isArray(predicate))\n\t\t\tpredicate = Object.keys( predicate )\n\n\t\tif (!ignore)\n\t\t\tignore = []\n\t\telse if (!Array.isArray(ignore))\n\t\t\tignore = Object.keys( ignore )\n\n\t\tlet res = target || {}\n\t\tfor (let key of predicate)\n\t\t\tif (!ignore.includes(key) && object.hasOwnProperty(key) )\n\t\t\t\tres[ key ] = object[key]\n\t\treturn res\n\t},\n\tfunctionsOf (obj, asyncOnly = false) {\n\t\tlet res = []\n\t\tif (!obj) return res\n\n\t\tfor (let m in obj)\n\t\t\tif ( obj[m] && ( asyncOnly ? this.isAsyncFunction( obj[m] ) : this.isFunction( obj[m] ) ) )\n\t\t\t\tres.push( obj[m] )\n\t\treturn res\n\t},\n\tfunctionNames (obj, asyncOnly = false) {\n\t\tlet res = []\n\t\tif (!obj) return res\n\n\t\tfor (let m in obj)\n\t\t\tif ( obj[m] && (asyncOnly ? this.isAsyncFunction( obj[m] ) : this.isFunction( obj[m] ) ) )\n\t\t\t\tres.push( m )\n\t\treturn res\n\t}\n\n}\n\nmodule.exports = Services\n","const isa = require('isa.js');\n\nconst enc = encodeURIComponent;\n\nconst serializers = {\n  string: function(str) {\n    if (typeof str !== 'string') {\n      throw new Error('Expected string to serialize: ' + str);\n    }\n    return enc(str);\n  },\n  number: function(num) {\n    if (typeof num !== 'number') {\n      throw new Error('Expected number to serialize: ' + num);\n    }\n    return enc(String(num));\n  },\n  boolean: function(bool) {\n    if (typeof bool !== 'boolean') {\n      throw new Error('Expected boolean to serialize: ' + bool);\n    }\n    return bool ? '1' : '0';\n  },\n  date: function(date) {\n    if (!isa.isDate(date)) {\n      throw new Error('Expected date to serialize: ' + date);\n    }\n    return enc(date.toISOString());\n  },\n  array: function(array) {\n    if (!isa.isArray(array)) {\n      throw new Error('Expected array to serialize: ' + array);\n    }\n    return enc(JSON.stringify(array));\n  },\n  object: function(obj) {\n    return enc(JSON.stringify(obj));\n  }\n};\n\n/**\n * Get a serializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(*): string} Function that serializes a value to a string.\n */\nexports.get = function(type) {\n  if (!(type in serializers)) {\n    throw new Error('Unable to serialize type: ' + type);\n  }\n  return serializers[type];\n};\n","const util = require('./util');\n\nconst dec = decodeURIComponent;\n\nconst noop = function() {};\n\nconst deserializers = {\n  string: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    return dec(str);\n  },\n  number: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const num = Number(dec(str));\n    if (isNaN(num)) {\n      throw new Error('Expected to deserialize a number: ' + str);\n    }\n    return num;\n  },\n  boolean: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let bool;\n    if (str === '1') {\n      bool = true;\n    } else if (str === '0') {\n      bool = false;\n    } else {\n      throw new Error('Expected \"1\" or \"0\" for boolean: ' + str);\n    }\n    return bool;\n  },\n  date: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    const date = new Date(dec(str));\n    if (isNaN(date.getTime())) {\n      throw new Error('Expected to deserialize a date: ' + str);\n    }\n    return date;\n  },\n  array: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let array;\n    try {\n      array = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!array || util.typeOf(array) !== 'array') {\n      throw new Error('Expected to deserialize an array: ' + str);\n    }\n    return array;\n  },\n  object: function(str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Expected string to deserialize: ' + str);\n    }\n    let obj;\n    try {\n      obj = JSON.parse(dec(str));\n    } catch (err) {\n      noop();\n    }\n    if (!obj || util.typeOf(obj) !== 'object') {\n      throw new Error('Expected to deserialize an object: ' + str);\n    }\n    return obj;\n  }\n};\n\n/**\n * Get a deserializer for a value of the given type.\n * @param {string} type Value type.\n * @return {function(string): *} Function that deserializes a string to a value.\n */\nexports.get = function(type) {\n  if (!(type in deserializers)) {\n    throw new Error('Unable to deserialize type: ' + type);\n  }\n  return deserializers[type];\n};\n","const util = require('./util');\n\nconst serializers = require('./serializers');\nconst deserializers = require('./deserializers');\n\n/**\n * Create a new field.  A field must have a default value (`default`) and is\n * capable of serializing and deserializing values.\n * @param {Object} config Field configuration.  Must have a `default` property\n *     with a default value.  May have optional `serialize` and `deserialize`\n *     functions.  As a shorthand for providing a config object with a `default`\n *     property, a default value may be provided directly.\n * @constructor\n */\nexports.Field = function(config) {\n  if (util.typeOf(config) !== 'object') {\n    this.default = config;\n  } else if (!('default' in config)) {\n    throw new Error('Missing default');\n  } else {\n    this.default = config.default;\n  }\n\n  const type = util.typeOf(this.default);\n  this.serialize = config.serialize || serializers.get(type);\n  this.deserialize = config.deserialize || deserializers.get(type);\n};\n","const util = require('./util');\n\n/**\n * Get values from a hash string.\n * @param {string} hash The hash string (e.g. '#/foo/bar').\n * @return {Object} The string values (e.g. {foo: 'bar'}).\n */\nfunction deserialize(hash) {\n  let zipped;\n  if (hash.length > 2) {\n    const path = hash.substring(2);\n    zipped = path.split('/');\n  } else {\n    zipped = [];\n  }\n  return util.unzip(zipped);\n}\n\n/**\n * Serialize values for the hash.\n * @param {Object} values The values to serialize.\n * @return {string} The hash string.\n */\nfunction serialize(values) {\n  let path = '#';\n  const parts = util.zip(values);\n  if (parts.length > 0) {\n    path = '#/' + parts.join('/');\n  }\n  return path;\n}\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n","import hashed from 'hashed';\nimport {transform} from 'ol/proj';\n\nfunction toPrecision(value, precision) {\n  const factor = Math.pow(10, precision);\n  return (Math.round(value * factor) / factor).toString();\n}\n\nfunction synchronize(map, options) {\n  options = options || {};\n  let animate;\n  if ('animate' in options) {\n    animate = options.animate;\n  } else {\n    animate = {duration: 250};\n  }\n\n  const view = map.getView();\n  const projection = view.getProjection().getCode();\n\n  let zoom, center, rotation;\n  if (view.isDef()) {\n    zoom = view.getZoom();\n    center = view.getCenter();\n    rotation = view.getRotation();\n  } else {\n    const viewport = map.getViewport();\n    if (viewport) {\n      zoom = Math.LOG2E * Math.log(viewport.clientWidth / 256);\n    } else {\n      zoom = 0;\n    }\n    center = [0, 0];\n    rotation = 0;\n  }\n\n  const config = {\n    center: {\n      default: center,\n      serialize: function(coord, state) {\n        let precision;\n        if (state && 'zoom' in state) {\n          precision = Math.max(0, Math.ceil(Math.log(state.zoom) / Math.LN2));\n        } else {\n          precision = 3;\n        }\n        coord = transform(coord, projection, 'EPSG:4326');\n        return (\n          toPrecision(coord[0], precision) +\n          ',' +\n          toPrecision(coord[1], precision)\n        );\n      },\n      deserialize: function(str) {\n        const parts = str.split(',');\n        if (parts.length !== 2) {\n          throw new Error('Expected lon,lat but got ' + str);\n        }\n        const coord = [parseFloat(parts[0]), parseFloat(parts[1])];\n        return transform(coord, 'EPSG:4326', projection);\n      }\n    },\n    zoom: {\n      default: zoom,\n      serialize: function(value) {\n        return toPrecision(value, 1);\n      },\n      deserialize: Number\n    },\n    rotation: {\n      default: rotation,\n      serialize: function(value) {\n        return toPrecision(value, 2);\n      },\n      deserialize: Number\n    }\n  };\n\n  function hashHandler(state) {\n    if (view.isDef() && animate) {\n      view.animate(Object.assign({}, state, animate));\n      return;\n    }\n    if ('center' in state) {\n      view.setCenter(state.center);\n    }\n    if ('zoom' in state) {\n      view.setZoom(state.zoom);\n    }\n    if ('rotation' in state) {\n      view.setRotation(state.rotation);\n    }\n  }\n\n  const update = hashed.register(config, hashHandler);\n\n  function onMoveEnd() {\n    update({\n      center: view.getCenter(),\n      zoom: view.getZoom(),\n      rotation: view.getRotation()\n    });\n  }\n\n  map.on('moveend', onMoveEnd);\n\n  return function unregister() {\n    map.un('moveend', onMoveEnd);\n    hashed.unregister(hashHandler);\n  };\n}\n\nexport default synchronize;\n","import GeoJSON from 'ol/format/GeoJSON';\nimport Map from 'ol/Map';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport View from 'ol/View';\nimport sync from 'ol-hashed';\nimport DragAndDrop from 'ol/interaction/DragAndDrop';\n\n\n\nconst map = new Map({\n  target: 'map-container',\n  layers: [\n    new VectorLayer({\n      source: new VectorSource({\n        format: new GeoJSON(),\n        url: './data/countries.json',\n      }),\n    }),\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\nsync(map);\n"],"names":["$3d78a3a2062be6dd$export$9099ad97b570f7c","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$727bf6738fdde94d$export$9099ad97b570f7c","$1386f4ed5b3d2a4b$export$9099ad97b570f7c","Disposable","disposed","dispose","disposeInternal","$16831c8b3cdccec7$export$8eda8fbd1364c8a1","a","b","$16831c8b3cdccec7$export$45934da9231b7323","arr","direction","n","length","i","$16831c8b3cdccec7$export$1f4f991ce94838ce","begin","end","tmp","$16831c8b3cdccec7$export$46e35401bc090c62","data","extension","Array","isArray","$16831c8b3cdccec7$export$bcc761834e33d339","arr1","arr2","len1","$20af65f7a38205f7$export$ad8dd69aa6772cd0","$20af65f7a38205f7$export$5c50afa32081505e","$20af65f7a38205f7$export$3850addf0fb4e6a7","$1ed278ebd065aaf6$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$1ed278ebd065aaf6$export$97fff7491bd246bd","object","property","$1ed278ebd065aaf6$export$207c30846165e93a","values","push","$1ed278ebd065aaf6$export$988399e568471db1","$c8df8fba8e9f5c07$var$Target","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$c8df8fba8e9f5c07$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$c8df8fba8e9f5c07$export$9099ad97b570f7c","$00d29b6ace6e67fa$export$9099ad97b570f7c","$46e86cc58f3e2235$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$46e86cc58f3e2235$export$d2df825b2d8bc2ba","$46e86cc58f3e2235$export$6dee5fd4fdf600ff","$11407e360abf7d44$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$11407e360abf7d44$var$__extends","changed","getRevision","len","ol_key","$11407e360abf7d44$export$21f63b82add5980c","$c8df8fba8e9f5c07$exports","default","$11407e360abf7d44$export$9099ad97b570f7c","$b1e57fdd8dde574a$export$18e1b4ff5b3c2297","Error","$b1e57fdd8dde574a$var$uidCounter_","$b1e57fdd8dde574a$export$604e9536b9e0488a","obj","ol_uid","String","$3e906ccbcd24be16$export$b902cfd711fa7f06","ObjectEvent","oldValue","$3e906ccbcd24be16$var$__extends","$3e906ccbcd24be16$export$9099ad97b570f7c","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$11407e360abf7d44$exports","$9a566a9848e727af$export$9099ad97b570f7c","AssertionError","code","message","split","name","$9a566a9848e727af$var$__extends","$20a6d17585e78d64$export$b8795f4f643ce74f","assertion","errorCode","$9a566a9848e727af$exports","$e5266561d049a513$export$7cf753b6a6534915","styles_1","getZIndex","$e5266561d049a513$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$e5266561d049a513$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$3e906ccbcd24be16$exports","$ed930b4d99744cb5$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$ed930b4d99744cb5$export$af68584dedf5e52c","Math","PI","$ffc5f3d579aca584$var$transformStringDiv","$ed930b4d99744cb5$export$9099ad97b570f7c","$f8271a0713c10a69$var$ua","navigator","userAgent","toLowerCase","$f8271a0713c10a69$export$543c908bf17a24fb","$f8271a0713c10a69$export$bccc8605349feea7","$f8271a0713c10a69$export$f16ffc71033a7aaa","$f8271a0713c10a69$export$1940d5d2b4cf824d","devicePixelRatio","$f8271a0713c10a69$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$f8271a0713c10a69$export$9544418e5c6fedfe","Image","decode","$f8271a0713c10a69$export$700ce540937d8c69","passive","options","defineProperty","window","error","$ffc5f3d579aca584$export$77f8d2fc923b14e3","transform","c","d","e","f","$ffc5f3d579aca584$export$6af9bbf310c9e4bf","coordinate","x","y","$ffc5f3d579aca584$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$ffc5f3d579aca584$export$6e6aac0f60e83c70","mat","det","$ffc5f3d579aca584$export$47bee913e0e80eb4","transformString","join","node","document","createElement","$92fe712ceb0b4cf4$export$9099ad97b570f7c","$d333a56ccd100cfd$export$14e1765886db335a","extent","opt_extent","$d333a56ccd100cfd$export$d6a0542127b96c83","slice","$d333a56ccd100cfd$export$c7d6a927f416dd39","dx","dy","$d333a56ccd100cfd$export$c422a9fcb5f1ee5c","$d333a56ccd100cfd$export$cc70e7e516e4370f","$d333a56ccd100cfd$export$4f55e2d709659e7b","extent1","extent2","$d333a56ccd100cfd$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","$d333a56ccd100cfd$export$ea8082d0226d35a5","$d333a56ccd100cfd$export$80741250c74fd4fa","Infinity","$d333a56ccd100cfd$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$d333a56ccd100cfd$export$4b116deb3079b147","$d333a56ccd100cfd$export$bcc761834e33d339","$d333a56ccd100cfd$export$2852acc8f8b94686","$d333a56ccd100cfd$export$8696fee511ea7c7a","min","max","$d333a56ccd100cfd$export$3932426cd8118930","$d333a56ccd100cfd$export$4e2fc25ce97f3583","$d333a56ccd100cfd$export$339e303bf205caae","$d333a56ccd100cfd$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$d333a56ccd100cfd$export$e178c8044d3d0a05","$d333a56ccd100cfd$export$c491031eb9adcc3a","intersection","$d333a56ccd100cfd$export$c3bd2c3b798b0350","$d333a56ccd100cfd$export$5100f0815ea32995","$d333a56ccd100cfd$export$35aedeaeee8be6cd","$d333a56ccd100cfd$export$3dc3550566517965","$d333a56ccd100cfd$export$988399e568471db1","$d333a56ccd100cfd$export$76e02248c0889c3e","transformFn","opt_stops","coordinates","width","height","xs","ys","l","$d333a56ccd100cfd$var$_boundingExtentXYs","$b3eb9bab7e855649$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$11d79372009851c4$export$4b8705656de00c72","$11d79372009851c4$export$4a376e0f60d976ee","cosh","exp","log2","$11d79372009851c4$export$fd0b1e5ac4df516c","t","$11d79372009851c4$export$8b6706701cd75ea9","$11d79372009851c4$export$11468133b1231643","angleInRadians","$11d79372009851c4$export$4fc80c88d72f096","angleInDegrees","$11d79372009851c4$export$3334706ffb3dccb1","r","$11d79372009851c4$export$45ca8e7f50ccf2e0","$a2e3ad3c6452af0b$export$bb1f4f75177e5528","$a2e3ad3c6452af0b$export$6fd015d56b8406c9","$a2e3ad3c6452af0b$export$64afaa717a0c4932","$a2e3ad3c6452af0b$export$2126dea64bc40b7b","log","tan","$a2e3ad3c6452af0b$var$EPSG3857Projection","EPSG3857Projection","point","$a2e3ad3c6452af0b$var$__extends","$a2e3ad3c6452af0b$export$850c9b527a5298aa","$a2e3ad3c6452af0b$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$a2e3ad3c6452af0b$export$f361696640082386","atan","$dbcd2854ae42c095$export$6fd015d56b8406c9","$dbcd2854ae42c095$export$af68584dedf5e52c","$dbcd2854ae42c095$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$dbcd2854ae42c095$var$__extends","$dbcd2854ae42c095$export$850c9b527a5298aa","$78eb3a0f9f69d51f$var$cache","$0e52faab48d1c258$var$transforms","$0e52faab48d1c258$export$568ed88074851180","destination","sourceCode","destinationCode","$4d7a66b176a5dddb$export$9099ad97b570f7c","$8adf1144ec7585ad$export$80a87d59b6e09730","c1","distance","bearing","opt_radius","radius","lat1","lon1","dByR","lat","asin","atan2","$31a6ec27eb422148$export$bcc761834e33d339","coordinate1","coordinate2","equals","$31a6ec27eb422148$export$d40e2456b1281660","cosAngle","sinAngle","$31a6ec27eb422148$export$5a0d9577a24f3c5b","projection","worldWidth","worldsAway","$31a6ec27eb422148$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$257c627c1e280f22$export$3fbbaef54e2e9d28","$257c627c1e280f22$export$678028d364072132","$257c627c1e280f22$export$6308908a0016f099","$78eb3a0f9f69d51f$export$568ed88074851180","$257c627c1e280f22$export$7eb84799c931fe91","projectionLike","replace","$257c627c1e280f22$export$a42db349809b0c24","projections","forEach","$257c627c1e280f22$export$fd4cd3535c7ea97f","$257c627c1e280f22$export$f704437a72056fb8","defaultCode","$257c627c1e280f22$export$c7a9310bdeddab53","projection1","projection2","equalUnits","$257c627c1e280f22$export$747af4f49bde2f53","sourceProjection","destinationProjection","transformFunc","$0e52faab48d1c258$export$7eb84799c931fe91","$257c627c1e280f22$export$9336879ef6599bf5","$257c627c1e280f22$export$4b169b49e1a4823b","$257c627c1e280f22$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$257c627c1e280f22$var$userProjection","$257c627c1e280f22$export$352fd07bdd93dc1e","$257c627c1e280f22$export$4a182a4d53d7595c","$257c627c1e280f22$export$b5d00774755783fc","destProjection","$257c627c1e280f22$export$a7d473ff80a6a3b","$257c627c1e280f22$export$f87215506b474b9e","$257c627c1e280f22$export$30407c756b1c3707","sourceUnits","userUnits","$38fbdbcddbfb2114$export$92106241c01aa541","opt_dest","dest","j","$38fbdbcddbfb2114$export$d40e2456b1281660","anchor","anchorX","anchorY","deltaX","deltaY","k","$a2e3ad3c6452af0b$exports","PROJECTIONS","$dbcd2854ae42c095$exports","fromEPSG4326","toEPSG4326","$2c40e41d9046f704$var$tmpTransform","$2c40e41d9046f704$export$9099ad97b570f7c","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$2c40e41d9046f704$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$d333a56ccd100cfd$export$d1e01ccfd06bf8ee","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$a1ed4c2e9ff299f1$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$a1ed4c2e9ff299f1$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$a1ed4c2e9ff299f1$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$2c40e41d9046f704$exports","clonedGeometries","$a1ed4c2e9ff299f1$export$9099ad97b570f7c","$45178ee5c320f5c0$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","opt_options","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","$45178ee5c320f5c0$export$534b7b915a5ec453","write","transformed","decimals","power_1","pow","round","$82712b733b1390bc$export$9099ad97b570f7c","$3e9a0d8aed32823b$var$getObject","JSON","parse","$3e9a0d8aed32823b$export$9099ad97b570f7c","JSONFeature","$3e9a0d8aed32823b$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$4d6d0df5f6d473fe$export$9099ad97b570f7c","$fbc4cbc2dbecf2fd$var$SimpleGeometry","SimpleGeometry","layout","$fbc4cbc2dbecf2fd$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$fbc4cbc2dbecf2fd$export$2a65008b73824080","setCoordinates","opt_layout","setLayout","nesting","$fbc4cbc2dbecf2fd$var$getLayoutForStride","$38fbdbcddbfb2114$export$8f869025bba9609b","$38fbdbcddbfb2114$export$41b0d7466cde8385","$fbc4cbc2dbecf2fd$export$36912b83e488cd77","simpleGeometry","$fbc4cbc2dbecf2fd$export$9099ad97b570f7c","$1eeaf5ba3166ef8e$var$assignClosest","offset1","offset2","$1eeaf5ba3166ef8e$export$acf7548d1f0e8581","squaredDelta","$1eeaf5ba3166ef8e$export$ba38095f6bb45df2","ends","$1eeaf5ba3166ef8e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","sqrt","$1eeaf5ba3166ef8e$export$3dd3914e22f9012e","$341fcb0cdbf81912$export$e175f505890ac90f","$341fcb0cdbf81912$export$ab1a51db55485752","coordinatess","opt_ends","jj","$54c380e0fb260ccc$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$54c380e0fb260ccc$export$ade7859c9eb393ec","simplifiedEnds","$54c380e0fb260ccc$export$383ea8a1f2974dfb","$54c380e0fb260ccc$export$e29de4fdb2175738","$54c380e0fb260ccc$export$1df19a1eb5514c2f","$ff23e8a6e0292000$export$40f3d9558cf6e846","callback","ret","$ebfee1857bdd365b$export$92f32d891164b0ac","opt_coordinates","$ebfee1857bdd365b$export$d82a8a3167f968d","opt_coordinatess","$ebfee1857bdd365b$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$ad7f8cfc102a20b1$export$55be7a9e3fef4787","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$16831c8b3cdccec7$export$26b1c556c0e0f127","$ad7f8cfc102a20b1$export$1a804b04fa5a0253","m","extrapolate","lo","hi","m0","$3c65f17c9f70f766$export$f7b55b637f92fd7","outside","val","$d333a56ccd100cfd$export$c26f7b9c5adc34b4","$3c65f17c9f70f766$export$e2ed757909b25f63","wn","$3c65f17c9f70f766$export$51e46a3625992b91","$2b86337dc0cae6ce$export$26f047a5bfac4b1a","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$d333a56ccd100cfd$export$525a75abb91115e3","$2b86337dc0cae6ce$export$717c2c7c46a5bf3d","$2b86337dc0cae6ce$export$f14bd9270666b480","$72877ffc9795efcc$export$7326ac1b36a49776","$7fc9bac1c7e6a765$export$9099ad97b570f7c","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$7fc9bac1c7e6a765$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$fbc4cbc2dbecf2fd$exports","$8e075789d295b82f$var$MultiLineString","MultiLineString","ends_","lineStrings","$8e075789d295b82f$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$ad7f8cfc102a20b1$export$8958f67b085a89b1","getEnds","getLineString","$7fc9bac1c7e6a765$exports","getLineStrings","getFlatMidpoints","midpoints","$2b86337dc0cae6ce$export$414b603e1c51ecd4","$8e075789d295b82f$export$9099ad97b570f7c","$d78f061ab8e6937f$var$Point","Point","$d78f061ab8e6937f$var$__extends","$341fcb0cdbf81912$export$a53e62528b652807","$d78f061ab8e6937f$export$9099ad97b570f7c","$ec70b77b5d212b39$var$MultiPoint","MultiPoint","$ec70b77b5d212b39$var$__extends","appendPoint","multiPoint","getPoint","$d78f061ab8e6937f$exports","getPoints","points","$ec70b77b5d212b39$export$9099ad97b570f7c","$d21f3a0ce2fde0f1$export$9bf2059fd656d5e9","twiceArea","$d21f3a0ce2fde0f1$export$99cb92d00fd73c87","area","$2eba2434999e946d$export$9099ad97b570f7c","LinearRing","$2eba2434999e946d$var$__extends","getArea","$7db2c52ec52bd7cf$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$4e5c47cc66c1cbb9$export$c77fe031a1447f2e","$846e7d12e139eeec$export$add61ad31d0a68b4","edge","$846e7d12e139eeec$export$586adaf930d9fdb6","opt_right","right","isClockwise","$846e7d12e139eeec$export$325e57738fd8b321","$846e7d12e139eeec$export$4efd43868de93336","$8577ba96696c7470$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$8577ba96696c7470$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$2eba2434999e946d$exports","getLinearRings","linearRings","$8577ba96696c7470$export$9099ad97b570f7c","$8577ba96696c7470$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$8577ba96696c7470$export$b50d271c6e9656cd","$8577ba96696c7470$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$8577ba96696c7470$export$5d1798f0e1df079","getRadius","startAngle","$2b01038ad8909ddb$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$2b01038ad8909ddb$var$__extends","appendPolygon","newEndss","multiPolygon","$1eeaf5ba3166ef8e$export$7bbfd5f5d0d7544b","$1eeaf5ba3166ef8e$export$6564f135364e210c","$3c65f17c9f70f766$export$664b9cb38de51b70","$d21f3a0ce2fde0f1$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$089899774745c253$export$3ed76a8ff8a671c","interiorPoints","$7db2c52ec52bd7cf$export$2bd6b2f516920f59","getInteriorPoints","$ec70b77b5d212b39$exports","$846e7d12e139eeec$export$9ae9bd8fe57776c1","simplifiedEndss","$54c380e0fb260ccc$export$503109e33f5b8344","getPolygon","prevEnds","$8577ba96696c7470$exports","getPolygons","$2b86337dc0cae6ce$export$eae4874c99627698","$341fcb0cdbf81912$export$abe2fb3e7ce9556","lastEnds","$2b01038ad8909ddb$export$9099ad97b570f7c","$90b5c261a4f758a8$var$GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$90b5c261a4f758a8$var$__extends","geoJSONFeature","$90b5c261a4f758a8$var$readGeometry","$e5266561d049a513$exports","geoJSONFeatures","crs","$90b5c261a4f758a8$var$writeGeometry","objects","$3e9a0d8aed32823b$exports","$90b5c261a4f758a8$var$readPointGeometry","$90b5c261a4f758a8$var$readLineStringGeometry","$90b5c261a4f758a8$var$readPolygonGeometry","$90b5c261a4f758a8$var$readMultiPointGeometry","$8e075789d295b82f$exports","$90b5c261a4f758a8$var$readMultiLineStringGeometry","$2b01038ad8909ddb$exports","$90b5c261a4f758a8$var$readMultiPolygonGeometry","map","$a1ed4c2e9ff299f1$exports","$90b5c261a4f758a8$var$readGeometryCollectionGeometry","geoJSON","$90b5c261a4f758a8$var$writePointGeometry","$90b5c261a4f758a8$var$writeLineStringGeometry","rightHanded","$90b5c261a4f758a8$var$writePolygonGeometry","$90b5c261a4f758a8$var$writeMultiPointGeometry","$90b5c261a4f758a8$var$writeMultiLineStringGeometry","$90b5c261a4f758a8$var$writeMultiPolygonGeometry","geometry1","$90b5c261a4f758a8$var$writeGeometryCollectionGeometry","$90b5c261a4f758a8$export$9099ad97b570f7c","$24f1b8341536f1fa$var$HEX_COLOR_RE_","$24f1b8341536f1fa$var$NAMED_COLOR_RE_","$24f1b8341536f1fa$export$9fe004474d6f7f65","color","$24f1b8341536f1fa$export$47bee913e0e80eb4","$24f1b8341536f1fa$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$24f1b8341536f1fa$export$21528ce64591bf2","s","g","exec","hasAlpha","parseInt","substr","$24f1b8341536f1fa$export$2e33abec8aecd572","Number","$24f1b8341536f1fa$var$fromStringInternal_","$24f1b8341536f1fa$export$7266a24c0caa2a8","$6184461a452b3df9$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$6184461a452b3df9$var$getKey","setSize","maxCacheSize","$6184461a452b3df9$export$601b9e2be44c7cb2","$6755f2167754dc52$export$9099ad97b570f7c","$7436508a8164a9fe$export$9099ad97b570f7c","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$7436508a8164a9fe$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$b9d5daa9625d320c$export$9099ad97b570f7c","$021387f4bbb0e320$export$9099ad97b570f7c","$d78a3f8d945e8ec2$export$16970faadcd3f29b","layerState","viewState","zoom","$d78a3f8d945e8ec2$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$d78a3f8d945e8ec2$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$7436508a8164a9fe$exports","$ba9cc254c2e615b0$var$MapRenderer","MapRenderer","map_","$ba9cc254c2e615b0$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","$d78a3f8d945e8ec2$exports","inView","getWrapX","callback_1","order","i1","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ba9cc254c2e615b0$var$expireIconCache","$ba9cc254c2e615b0$export$9099ad97b570f7c","$7246c595371691cc$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7246c595371691cc$var$__extends","$35f3eb34fb00a437$var$fontRegEx","RegExp","$35f3eb34fb00a437$var$fontRegExMatchIndex","$35f3eb34fb00a437$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$35f3eb34fb00a437$export$e04cd5eb7e7428c6","$158e6a8754c20e7c$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$158e6a8754c20e7c$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$158e6a8754c20e7c$export$47503d53c08beb29","$33ba1dda25080cc3$export$6ad0413f8fea3c71","$33ba1dda25080cc3$export$70c5a077e5d6beb9","$33ba1dda25080cc3$export$907cf5cff4a8acb1","console","warn","$33ba1dda25080cc3$var$measureFont","measureElement","$33ba1dda25080cc3$var$measureContext","$33ba1dda25080cc3$export$384c0f09c94ed6cc","$33ba1dda25080cc3$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$33ba1dda25080cc3$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$33ba1dda25080cc3$export$a2bf16790cd8f004","metrics","$33ba1dda25080cc3$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$33ba1dda25080cc3$export$4b2ca35321179b27","$33ba1dda25080cc3$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$33ba1dda25080cc3$var$executeLabelInstructions","drawImage","restore","$2d3983d3c236cd0f$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$35f3eb34fb00a437$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2d3983d3c236cd0f$var$__extends","event_1","$7246c595371691cc$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$158e6a8754c20e7c$export$439ebc2b0f0ec9f4","getDataAtPixel","$ba9cc254c2e615b0$exports","$2d3983d3c236cd0f$export$9099ad97b570f7c","$8c239c70ba402b1b$export$9099ad97b570f7c","$12698a83d5d6619d$var$Property","$12698a83d5d6619d$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$12698a83d5d6619d$var$__extends","$12698a83d5d6619d$var$Collection","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$12698a83d5d6619d$export$9099ad97b570f7c","$78bdbac1eaad4f08$var$Property","$78bdbac1eaad4f08$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$12698a83d5d6619d$exports","setLayers","$78bdbac1eaad4f08$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$78bdbac1eaad4f08$export$9099ad97b570f7c","$5f50aaa354ee43e8$export$9099ad97b570f7c","MapEvent","$5f50aaa354ee43e8$var$__extends","$5cb33e338f86483d$export$9099ad97b570f7c","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5cb33e338f86483d$var$__extends","getEventPixel","getCoordinateFromPixel","$5f50aaa354ee43e8$exports","$1701e629f00eed9c$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$eef913c1b3abba70$export$9099ad97b570f7c","$5ce77a9367e71852$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$5ce77a9367e71852$var$__extends","emulateClick_","pointerEvent","newEvent","$5cb33e338f86483d$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$75da2f64972311f8$export$9099ad97b570f7c","$aa15c1da5ede11e4$export$9099ad97b570f7c","$a5b5f21c6babad23$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$a5b5f21c6babad23$export$9099ad97b570f7c","$7c9022c2746a8240$export$9099ad97b570f7c","$79e77b05f0af3af4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$79e77b05f0af3af4$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$79e77b05f0af3af4$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","$9d93d71f67d1f597$export$9099ad97b570f7c","$e90c70f3094ec23d$export$9099ad97b570f7c","$7a79f648aa728795$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$7a79f648aa728795$export$eaafe0fae18e32b1","$0e1a1b60122676ba$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$0e1a1b60122676ba$var$getSmoothClampedResolution","$0e1a1b60122676ba$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$bfacba8d4304d68f$export$e97ec87d2336bd4e","$bfacba8d4304d68f$export$eaafe0fae18e32b1","$69c984769656a840$export$673b9849e2bc032c","$69c984769656a840$export$9fbc3b1d6b2da9ec","$69c984769656a840$export$1b5c1277e30d397d","$69c984769656a840$export$5523e35ab8ae283a","$013cf7a9f19a8f6c$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$013cf7a9f19a8f6c$var$__extends","resolutionConstraintInfo","$013cf7a9f19a8f6c$export$8b6914b45b83f21f","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$013cf7a9f19a8f6c$export$535fae5a159fbda4","resolutionConstraint","constraint","rotationConstraint","$013cf7a9f19a8f6c$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$013cf7a9f19a8f6c$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$013cf7a9f19a8f6c$export$5d87c27d7d9f380e","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$013cf7a9f19a8f6c$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$0e1a1b60122676ba$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$0e1a1b60122676ba$export$7690ad4e930f454b","theta","opt_tolerance","enableRotation","constrainRotation","$013cf7a9f19a8f6c$export$9099ad97b570f7c","$1584674e6c442cb4$export$c563c2b7121f8771","$1584674e6c442cb4$export$48d31d2725e4d98b","$f45eee633772e0e7$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$78bdbac1eaad4f08$exports","view","$013cf7a9f19a8f6c$exports","$f45eee633772e0e7$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$79e77b05f0af3af4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$f45eee633772e0e7$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$5ce77a9367e71852$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$f45eee633772e0e7$export$9099ad97b570f7c","$52e6a1ab15a4b16d$var$Control","Control","target_","listenerKeys","$52e6a1ab15a4b16d$var$__extends","mapEvent","$52e6a1ab15a4b16d$export$9099ad97b570f7c","$d272f1a7f2d66954$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$d272f1a7f2d66954$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$158e6a8754c20e7c$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$52e6a1ab15a4b16d$exports","$d272f1a7f2d66954$export$9099ad97b570f7c","$df8a7089a421bf2f$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$df8a7089a421bf2f$var$__extends","resetNorth_","$1022d6743ffba880$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$1022d6743ffba880$var$__extends","zoomByDelta_","currentZoom","newZoom","$6fe2ef1e7a750c69$export$9099ad97b570f7c","$f26f33305875ffd9$export$63568b31cb17dd4d","$f26f33305875ffd9$export$d2c07614bfd6a817","$f26f33305875ffd9$export$9099ad97b570f7c","Interaction","setActive","$f26f33305875ffd9$var$__extends","active","$247995ce03a38b1e$export$9099ad97b570f7c","DoubleClickZoom","delta_","$247995ce03a38b1e$var$__extends","stopEvent","shiftKey","$f26f33305875ffd9$exports","zoomByDelta","$15b70ec573750fa6$export$e61edea4dfe4ed9b","$15b70ec573750fa6$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$15b70ec573750fa6$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$15b70ec573750fa6$var$isPointerDraggingEvent","$1dd9bb17917c1459$export$8dbdea330bbd6b3c","conditions","pass","$1dd9bb17917c1459$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$1dd9bb17917c1459$export$584a07df7b145c47","hasAttribute","activeElement","$1dd9bb17917c1459$export$363947888fb85da6","$1dd9bb17917c1459$export$a8612972eacfc116","$1dd9bb17917c1459$export$9f5e19851eeaf2c1","$1dd9bb17917c1459$export$1734dfcac3c09b2f","$1dd9bb17917c1459$export$59c8376875f673f8","$1dd9bb17917c1459$export$5bbcce8021828272","tagName","$1dd9bb17917c1459$export$d31d3f3aa38542a8","pointerType","$1dd9bb17917c1459$export$45cd27c0322d6513","isPrimary","$f61551752c4f4f08$export$9099ad97b570f7c","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$f61551752c4f4f08$var$__extends","centroid","$15b70ec573750fa6$exports","update","getDistance","getAngle","centerpx","$d813784fb0405083$export$9099ad97b570f7c","DragRotate","lastAngle_","$d813784fb0405083$var$__extends","$46289f3b330b6586$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$46289f3b330b6586$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$a8d898a7bd6fd9e0$var$DragBoxEventType","$a8d898a7bd6fd9e0$export$4d9b552836937ca2","DragBoxEvent","$a8d898a7bd6fd9e0$var$__extends","$a8d898a7bd6fd9e0$export$9099ad97b570f7c","DragBox","box_","$46289f3b330b6586$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$6a3aca92466c0896$export$9099ad97b570f7c","DragZoom","out_","out","$6a3aca92466c0896$var$__extends","factor","$a8d898a7bd6fd9e0$exports","$11a5f739eb17e24b$export$9099ad97b570f7c","$52d09675c125dcf1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$52d09675c125dcf1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$1fae754d3ea6677a$export$9099ad97b570f7c","KeyboardZoom","$1fae754d3ea6677a$var$__extends","charCode","charCodeAt","$e0121ce5936cb4d8$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$cd0092067e7ded9c$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$cd0092067e7ded9c$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$cd0092067e7ded9c$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$a80081c3438ffbf4$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$a80081c3438ffbf4$var$__extends","rotationDelta","touch0","touch1","$e1a7c7fda3fcb5d0$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$e1a7c7fda3fcb5d0$var$__extends","scaleDelta","$b92278933294ec34$export$9099ad97b570f7c","Map1","$1022d6743ffba880$exports","zoomOptions","$df8a7089a421bf2f$exports","rotateOptions","attribution","$d272f1a7f2d66954$exports","attributionOptions","$3ba5c30aca7182c2$export$b403fbac94228e09","altShiftDragRotate","$d813784fb0405083$exports","doubleClickZoom","$247995ce03a38b1e$exports","zoomDelta","zoomDuration","dragPan","$f61551752c4f4f08$exports","pinchRotate","$a80081c3438ffbf4$exports","pinchZoom","$e1a7c7fda3fcb5d0$exports","keyboard","$52d09675c125dcf1$exports","$1fae754d3ea6677a$exports","mouseWheelZoom","$cd0092067e7ded9c$exports","shiftDragZoom","$6a3aca92466c0896$exports","$c930ad710d84b305$export$b403fbac94228e09","$b92278933294ec34$var$__extends","$2d3983d3c236cd0f$exports","$f45eee633772e0e7$exports","$37ca435c53f13d4d$exports","t1","t2","r1","e1","a1","h1","u","p","_maxEntries","_minEntries","n1","leaf","m2","c2","h2","o1","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","u1","m1","_chooseSubtree","u2","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$cd8285e3e84f4d13$export$9099ad97b570f7c","$7736c129cc15e8f7$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$6376afaf3edc9c87$export$55029509b82b2e2b","$09e02ea90a0e8bf3$var$RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$09e02ea90a0e8bf3$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$09e02ea90a0e8bf3$export$9099ad97b570f7c","$52515b32646d1620$export$9099ad97b570f7c","CircleStyle","$52515b32646d1620$var$__extends","setRadius","$09e02ea90a0e8bf3$exports","$85f396a493b4e027$export$9099ad97b570f7c","Fill","color_","setColor","$5d571ec9414fea2a$export$9099ad97b570f7c","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b14009c8ddfadc85$var$Style","Style","geometryFunction_","$b14009c8ddfadc85$var$defaultGeometryFunction","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$b14009c8ddfadc85$var$defaultStyles","$b14009c8ddfadc85$export$33d0043adf82cc14","$52515b32646d1620$exports","$8b66177f43228c5f$var$Property","$8b66177f43228c5f$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$8b66177f43228c5f$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$b14009c8ddfadc85$export$4aaa4bacaec09e94","$0029daffb0840ded$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$0029daffb0840ded$export$c649c04369bd3370","$0029daffb0840ded$export$2513c58bc344fc5c","$0029daffb0840ded$export$84e3c67fd41b07f5","$0029daffb0840ded$export$6cd4b1e0c0e7240c","$0029daffb0840ded$export$9099ad97b570f7c","$0d3e13e6cbc69874$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$1894cda24582da9a$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$1894cda24582da9a$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1894cda24582da9a$export$9099ad97b570f7c","$a4795f00dc9530fb$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$a4795f00dc9530fb$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$1894cda24582da9a$exports","$9d273adc89b91f65$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$9d273adc89b91f65$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$9d273adc89b91f65$export$9099ad97b570f7c","$f6fbeb90ec7648f7$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$f6fbeb90ec7648f7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$f6fbeb90ec7648f7$export$9099ad97b570f7c","$d31bc97d019705a3$export$9099ad97b570f7c","$b17755064c98f4bd$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$b73d5ad30737d390$export$3964e67694391753","$b73d5ad30737d390$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$b73d5ad30737d390$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$b73d5ad30737d390$export$9099ad97b570f7c","$ca6b30c5cbf24996$var$BATCH_CONSTRUCTORS","$f6fbeb90ec7648f7$exports","$a4795f00dc9530fb$exports","$9d273adc89b91f65$exports","$b73d5ad30737d390$exports","$ca6b30c5cbf24996$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$0d7ccc2184bbb6ae$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$0d7ccc2184bbb6ae$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$48340b1070105b4e$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$48340b1070105b4e$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$0d7ccc2184bbb6ae$exports","$af060b2ee005860e$export$9099ad97b570f7c","$f4f82de86f87f3a5$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$4382159e91befef5$var$tmpExtent","$4382159e91befef5$var$p1","$4382159e91befef5$var$p2","$4382159e91befef5$var$p3","$4382159e91befef5$var$p4","$4382159e91befef5$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$4382159e91befef5$var$rtlRegEx","fromCharCode","$4382159e91befef5$var$horizontalTextAlign","align","test","TEXT_ALIGN","$4382159e91befef5$var$Executor","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$33ba1dda25080cc3$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$4382159e91befef5$export$9099ad97b570f7c","$569c5f1125a255d7$var$ORDER","$569c5f1125a255d7$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$569c5f1125a255d7$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$569c5f1125a255d7$export$f610334c339a4991","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$569c5f1125a255d7$export$9099ad97b570f7c","$a9d040e5a239f750$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$a9d040e5a239f750$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$a9d040e5a239f750$export$9099ad97b570f7c","$f7585e292fcf6dc5$export$9099ad97b570f7c","$a451836ed9fa69af$export$9099ad97b570f7c","$723ec55387d416d6$export$9099ad97b570f7c","ImageBase","$723ec55387d416d6$var$__extends","$fced4221eaca0419$export$469eb8ba3f45955e","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$fced4221eaca0419$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$723ec55387d416d6$exports","$e98e828d2003bc1a$var$taintedTestContext","$e98e828d2003bc1a$var$IconImage","IconImage","imageState_","tainted_","$e98e828d2003bc1a$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$fced4221eaca0419$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$e98e828d2003bc1a$export$7eb84799c931fe91","$bdd0cbe3d07330ec$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$e98e828d2003bc1a$exports","offset_","offsetOrigin_","offsetOrigin","$bdd0cbe3d07330ec$var$__extends","setAnchor","iconImageSize","$5d8f27e59f1a1823$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$5d8f27e59f1a1823$export$65a5cfeed6fd0c33","feature1","feature2","$5d8f27e59f1a1823$export$f0ea347488340e3d","$5d8f27e59f1a1823$export$522dfd100dd96ba1","$5d8f27e59f1a1823$var$renderGeometry","$5d8f27e59f1a1823$var$renderFeatureInternal","$c153db647ed724b6$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c153db647ed724b6$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ffc5f3d579aca584$export$e7468c0ae08395df","clipped","transforms","imageSmoothingEnabled","$a9d040e5a239f750$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$bdd0cbe3d07330ec$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$7a6473f1d8aeafa7$export$9fd146a6491490e3","resultFeatures","$7a6473f1d8aeafa7$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$d333a56ccd100cfd$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","userExtent_1","loadFeatures","$5d8f27e59f1a1823$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$48340b1070105b4e$exports","$c153db647ed724b6$export$9099ad97b570f7c","$072ae9021a014f94$export$9099ad97b570f7c","VectorLayer","$072ae9021a014f94$var$__extends","$c153db647ed724b6$exports","$8b66177f43228c5f$exports","$bb0e1df757854922$var$RBush","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$bb0e1df757854922$export$9099ad97b570f7c","$3fa87a5786fdcb68$var$adaptAttributions","attributionLike","$3fa87a5786fdcb68$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$3fa87a5786fdcb68$var$__extends","getContextOptions","refresh","setAttributions","setState","$c0e76308793a8fd7$export$9099ad97b570f7c","$0d7b3e6e3fdff479$export$8dbdea330bbd6b3c","$2e1cfd628699255e$var$withCredentials","$2e1cfd628699255e$export$52988233cf090939","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$2e1cfd628699255e$export$4355fa6d12274ca5","addFeatures","$fc5e688652164909$export$6cfa4eec14fd8155","$fc5e688652164909$export$357eb1b4f03c1402","$fc5e688652164909$export$bca097ad32b98905","$fc5e688652164909$export$2e67c97dae900dc9","$ce37569069058434$export$69c4525ba9274d0a","$3efdcf8d45b58077$export$292766477ad9ab99","$f2eb7787244ea483$export$46e35401bc090c62","$f2eb7787244ea483$export$c9ada32f20c3c37b","$f2eb7787244ea483$export$969de9d6b09f6847","$f2eb7787244ea483$export$1c4da3575e598097","$2649c727c2ac59b6$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$2649c727c2ac59b6$var$__extends","$2649c727c2ac59b6$var$VectorSource","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$3fa87a5786fdcb68$exports","$2649c727c2ac59b6$export$9099ad97b570f7c","$10604cd8390cbdeb$var$objectProto","$10604cd8390cbdeb$var$objToString","$10604cd8390cbdeb$var$fnToString","Function","$10604cd8390cbdeb$var$objCtorString","$10604cd8390cbdeb$var$STRIP_COMMENTS","$10604cd8390cbdeb$var$ARGUMENT_NAMES","$10604cd8390cbdeb$var$NAME_PATTERN","$10604cd8390cbdeb$var$Services","getPrototypeOf","isHostObject","isDefined","isIterable","Symbol","iterator","isPromise","isPlainObject","isObjectLike","proto","constructor","Ctor","isObject","isError","isNumber","isDate","isFunction","isSyncFunction","isAsyncFunction","isBoolean","isString","isRegExp","walk","path","defaultValue","oPath","isValidPath","parameterNames","fnStr","pick","predicate","ignore","res","includes","functionsOf","asyncOnly","functionNames","$3a3eff834bc3e0b0$export$7eb84799c931fe91","$10604cd8390cbdeb$exports","zipped","$3a3eff834bc3e0b0$var$enc","encodeURIComponent","$3a3eff834bc3e0b0$var$serializers","string","str","number","num","boolean","bool","date","toISOString","$47abdb80020d2714$export$7eb84799c931fe91","$47abdb80020d2714$var$dec","decodeURIComponent","$47abdb80020d2714$var$deserializers","getTime","config","serialize","deserialize","$3efdcf8d45b58077$var$Schema","fields","prefix","_","$3efdcf8d45b58077$require$Field","_prefix","_fields","getPrefixed","forEachKey","getDefault","conflicts","other","thisPrefixedKeys","prefixed","$ce37569069058434$var$Store","_values","_defaults","_providers","_callback","_callbackTimer","_scheduleCallback","_debouncedCallback","_updateTimer","_debouncedUpdate","newValues","providers","provider","schema","deserialized","serializedDefault","unregister","removedProvider","defaults","register","$ce37569069058434$require$Schema","_initializeProvider","serializedValue","deserializedValue","deserializedDefault","serialized","serializer","$691f7c59879b14bd$export$e4ab0279f1988ab8","$691f7c59879b14bd$export$2e67c97dae900dc9","$fc5e688652164909$var$store","$fc5e688652164909$var$reset","$fc5e688652164909$var$update","$fc5e688652164909$require$Store","location","hash","nonDefaults","history","pushState","$e3c5402baf428451$var$toPrecision","precision","viewport","LOG2E","clientWidth","LN2","hashHandler","$fc5e688652164909$exports","onMoveEnd","$e3c5402baf428451$export$9099ad97b570f7c","$b92278933294ec34$exports","$072ae9021a014f94$exports","$2649c727c2ac59b6$exports","$90b5c261a4f758a8$exports"],"version":3,"file":"index.46966f9c.js.map"}